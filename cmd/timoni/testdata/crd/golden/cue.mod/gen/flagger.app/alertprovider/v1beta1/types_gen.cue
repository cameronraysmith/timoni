// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni vendor crd -f testdata/crd/source/flagger.crds.yaml

package v1beta1

import "strings"

// AlertProvider is the Schema for the AlertProvider API.
#AlertProvider: {
	// APIVersion defines the versioned schema of this representation
	// of an object. Servers should convert recognized schemas to the
	// latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "flagger.app/v1beta1"

	// Kind is a string value representing the REST resource this
	// object represents. Servers may infer this from the endpoint
	// the client submits requests to. Cannot be updated. In
	// CamelCase. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "AlertProvider"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// AlertProviderSpec defines the desired state of a AlertProvider.
	spec!: #AlertProviderSpec
}

// AlertProviderSpec defines the desired state of a AlertProvider.
#AlertProviderSpec: matchN(1, [{
	type!:    _
	address!: _
}, {
	type!:      _
	secretRef!: _
}]) & {
	// Hook URL address of this provider
	address?: string

	// Alert channel for this provider
	channel?: string

	// Http/s proxy of this provider
	proxy?: string
	secretRef?: {
		// Name of the Kubernetes secret
		name!: string
	}

	// Type of this provider
	type?: "slack" | "msteams" | "discord" | "rocket" | "gchat"

	// Bot username for this provider
	username?: string
}
